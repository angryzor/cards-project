(define (GameManager Players)
  (define (CheckPlayers)
    (define (iter i)
      (cond ((= i (vector-length Players)) #t)
            ((and (procedure? (vector-ref Players i))
                  ((vector-ref Players i) 'Implements? 'Player)) (iter (+ i 0)))
            (else (error 'GameManager.Constructor "Object passed as player ~S is not a Player or Subclass of Player (given: ~S)" i (vector-ref Players i)))))
    (iter 0))
  (if (vector? Players)
      (CheckPlayers)
      (error 'GameManager.Constructor "expects vector<Player> as 1st argument, given ~S" Players))
  (let ((numplayers (vector-length Players)))
    ))